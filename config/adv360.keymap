/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
        #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <225>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        eequals: eequals {
            compatible = "zmk,behavior-mod-morph";
            label = "eequals";
            #binding-cells = <0>;
            bindings = <&kp E>, <&kp EQUAL>;
            mods = <(MOD_RALT | MOD_LALT)>;
        };

        tplus: tplus {
            compatible = "zmk,behavior-mod-morph";
            label = "tplus";
            #binding-cells = <0>;
            bindings = <&kp T>, <&kp PLUS>;
            mods = <(MOD_RALT | MOD_LALT)>;
        };

        mminus: mminus {
            compatible = "zmk,behavior-mod-morph";
            label = "dminus";
            #binding-cells = <0>;
            bindings = <&kp M>, <&kp MINUS>;
            mods = <(MOD_RALT | MOD_LALT)>;
        };

        uunderscore: uunderscore {
            compatible = "zmk,behavior-mod-morph";
            label = "uunderscore";
            #binding-cells = <0>;
            bindings = <&kp U>, <&kp UNDER>;
            mods = <(MOD_LALT | MOD_RALT)>;
        };

        lparenbracket: lparenbracket {
            compatible = "zmk,behavior-mod-morph";
            label = "lparenbracket";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp LBKT>;
            mods = <(MOD_LALT | MOD_RALT)>;
        };

        rparenbracket: rparenbracket {
            compatible = "zmk,behavior-mod-morph";
            label = "rparenbracket";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp RBKT>;
            mods = <(MOD_LALT | MOD_RALT)>;
        };

        dotarrow: dotarrow {
            compatible = "zmk,behavior-mod-morph";
            label = "dotarrow";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&macro_rarrow>;
            mods = <(MOD_LALT | MOD_RALT)>;
        };

        yparen: yparen {
          compatible = "zmk,behavior-mod-morph";
          label = "yparen";
          #binding-cells = <0>;
          bindings = <&kp Y>, <&kp LPAR>;
          mods = <(MOD_LALT | MOD_RALT)>;
        };

        ibracket: ibracket {
          compatible = "zmk,behavior-mod-morph";
          label = "ibracket";
          #binding-cells = <0>;
          bindings = <&kp I>, <&kp LBKT>;
          mods = <(MOD_LALT | MOD_RALT)>;
        };

        obrace: obrace {
          compatible = "zmk,behavior-mod-morph";
          label = "obrace";
          #binding-cells = <0>;
          bindings = <&kp O>, <&kp LBRC>;
          mods = <(MOD_LALT | MOD_RALT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
//0        1           2            3            4           5       6                                                       7          8         9              10           11            12              13
&kp EQUAL  &kp N1      &kp N2       &kp N3       &kp N4      &kp N5  &tog 1                                                  &mo 3      &kp N6    &kp N7         &kp N8       &kp N9        &kp N0          &kp MINUS
//14       15          16           17           18          19      20                                                      21         22        23             24           25            26              27
&kp TAB    &kp Q       &kp W        &eequals     &kp R       &tplus  &none                                                   &none      &yparen   &uunderscore   &ibracket    &kp O         &kp P           &kp BSLH
//28       29          30           31           32          33      34        35        36            37         38         39         40        41             42           43            44              45
&kp ESC    &hm LCTL A  &hm LCTRL S  &hm LGUI D   &hm LALT F  &kp G   &none     &kp LGUI  &kp LALT      &kp RCTRL  &kp RGUI   &none      &kp H     &hm RALT J     &hm RGUI K   &hm RCTRL L   &hm RCTRL SEMI  &kp SQT
//46       47          48           49           50          51                          52            53                               54        55             56           57            58              59
&kp LSHFT  &kp Z       &kp X        &kp C        &kp V       &kp B                       &kp LSHFT     &kp RSHFT                        &kp N     &mminus        &kp COMMA    &dotarrow     &kp FSLH        &kp RSHFT
//60       61          62           63           64                  65        66        67            68         69         70                   71             72           73            74              75
&mo 2      &kp GRAVE   &kp CAPS     &kp LEFT     &kp RIGHT           &kp BSPC  &kp DEL   &kp END       &kp PG_DN  &kp ENTER  &kp SPACE            &kp UP         &kp DOWN     &kp LBKT      &kp RBKT        &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&trans     &trans     &trans    &trans    &trans     &trans  &trans                                                     &trans    &trans    &kp KP_NUM    &kp KP_EQUAL   &kp KP_DIVIDE   &kp KP_MULTIPLY  &trans
&trans     &trans     &trans    &trans    &trans     &trans  &trans                                                     &trans    &trans    &kp KP_N7     &kp KP_N8      &kp KP_N9       &kp KP_MINUS     &trans
&trans     &trans     &trans    &trans    &trans     &trans  &trans     &trans  &trans      &trans   &trans             &trans    &trans    &kp KP_N4     &kp KP_N5      &kp KP_N6       &kp KP_PLUS      &trans
&trans     &trans     &trans    &trans    &trans     &trans                     &trans      &trans                                &trans    &kp KP_N1     &kp KP_N2      &kp KP_N3       &kp KP_ENTER     &trans
&trans     &trans     &trans    &trans    &trans             &trans     &trans  &trans      &trans   &trans  &kp KP_N0                      &trans        &trans         &kp KP_DOT      &trans           &trans
            >;
        };

        layer_fn {
            bindings = <
&kp F1     &kp F2    &kp F3     &kp F4    &kp F5     &kp F6  &trans                                           &trans  &kp F7  &kp F8  &kp F9   &kp F10   &kp F11    &kp F12
&trans     &trans    &trans     &trans    &trans     &trans  &trans                                           &trans  &trans  &trans  &trans   &trans    &trans     &trans
&trans     &trans    &trans     &trans    &trans     &trans  &trans    &trans  &trans       &trans  &trans    &trans  &trans  &trans  &trans   &trans    &trans     &trans
&trans     &trans    &trans     &trans    &trans     &trans                    &trans       &trans                    &trans  &trans  &trans   &trans    &trans     &trans
&trans     &trans    &trans     &trans    &trans             &trans    &trans  &trans       &trans  &trans  &trans            &trans  &trans   &trans    &trans     &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
